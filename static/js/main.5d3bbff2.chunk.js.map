{"version":3,"sources":["assets/image2.svg","view/Components/Header/index.js","view/Components/Header/Header.js","constants/index.js","context/LangContext.js","view/Components/Contacts/Contacts.js","view/Components/Contacts/index.js","view/Components/About/index.js","view/Components/About/About.js","view/Components/Products/Components/Cosmetology.js","view/Components/Products/Components/LiftingThread.js","view/Components/Products/Products.js","view/Components/Products/index.js","routes/index.js","routes/routes.js","view/Components/Footer/index.js","view/Components/Footer/Footer.js","view/Components/ScrollButton/index.js","view/Components/ScrollButton/ScrollButton.js","view/Components/NavBar/MobileNavBar.js","view/Components/NavBar/index.js","view/Components/NavBar/NavBar.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","cloudName","className","publicId","href","target","rel","GB_FLAG_LINK","RU_FLAG_LINK","PRODUCTS_TABS","LangContext","React","createContext","lang","currentLangData","switchLang","langData","about","header","desc","spec","list","products","tabNames","subTabNames","contacts","userName","userEmail","message","send","emailError","nameError","textError","messageHeader","messageSuccessContent","messageFailContent","footer","company","info","office","mail","app","language","EMAIL_VALIDATION","checkEmail","value","test","checkName","length","checkMessage","Contacts","useContext","initForm","name","email","useState","form","handleForm","clickedButton","handleClick","passValid","fireAlert","status","Swal","fire","icon","heightAuto","title","text","customClass","confirmButton","container","popup","setTimeout","close","sendFeedback","values","emailjs","then","res","catch","err","Grid","Column","computer","mobile","stretched","Image","src","textAlign","as","Form","Field","required","Input","error","content","control","label","onChange","e","data","placeholder","TextArea","Button","onClick","message_html","from_name","reply_to","handleSubmit","type","About","divided","Container","fluid","List","map","key","Item","Icon","size","window","innerWidth","corent","Content","alt","fetchImages","Row","cosmetics","Transition","visible","directional","animation","transitionOnMount","duration","verticalAlign","largeScreen","tablet","widescreen","Reveal","animated","hidden","split","join","createPanes","menuItem","toxins","render","Tab","Pane","attached","fillers","meso","Cosmetology","menu","vertical","tabular","pointing","secondary","panes","LiftingThread","expanded","setExpand","moused","setMoused","imageKey","setImageKey","hoveredColumn","setHoveredColumn","lifting","unmountOnHide","style","top","onMouseEnter","props","parseInt","replace","findNumberInString","currentTarget","onMouseLeave","visibility","Modal","closeIcon","onClose","open","setModalImage","cosmetology","context","other","Products","routes","path","component","Footer","navIndex","currentYear","Date","getFullYear","flag","switchFlag","currentFlag","currentLanguage","logo","Menu","item","largescreen","color","ScrollButton","scrollRef","useRef","useEffect","addEventListener","scrollFunction","current","children","closest","scrollTop","innerHeight","ref","MobileMenu","toggleMenu","hamburgerClass","menuClass","NavBar","Sticky","borderless","position","Boolean","location","hostname","match","hist","createBrowserHistory","routing","localStorage","getItem","navigator","setLang","selectedLang","Provider","ln","setItem","history","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d3bbff2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image2.50265e9e.svg\";","import Header from './Header.js';\n\nexport default Header;\n","import React from 'react';\nimport {Image as CloudImage} from \"cloudinary-react\";\nimport './style.scss';\n\n\nconst Header = () => {\n    return (\n        <div\n            id=\"home\"\n        >\n            <CloudImage\n                cloudName={'koruja'}\n                className='banner'\n                publicId=\"koruja/assets/bannerr.jpg\">\n            </CloudImage>\n            <a\n                href={'https://www.instagram.com/krj.export/'}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <CloudImage\n                    cloudName={'koruja'}\n                    className={'icon-instagram-default icon-banner-instagram'}\n                    publicId=\"koruja/assets/instagram0.2_v2ozw6\">\n                </CloudImage>\n            </a>\n        </div>\n    )\n};\nexport default Header;\n","// links\nexport const CONTACTS_LINK = 'https://res.cloudinary.com/koruja/image/upload/v1581307515/koruja/assets/CONTACTS.jpg';\nexport const GB_FLAG_LINK = 'https://res.cloudinary.com/koruja/image/upload/v1581557031/koruja/assets/gb.png';\nexport const RU_FLAG_LINK = 'https://res.cloudinary.com/koruja/image/upload/v1581644536/koruja/assets/RU_p32pbt.png';\nexport const PUBLIC_ID_INSTAGRAM_ICON = \"koruja/assets/instagram0.2_v2ozw6\";\n// common\nexport const LOGO_NAME = 'KRJ';\nexport const CLOUD_NAME = \"koruja\";\n// about\nexport const ABOUT_PUBLIC_ID = 'koruja/assets/about_exbp76.jpg';\n// products\nexport const PRODUCTS = \"products\";\nexport const PRODUCTS_TOXINS = 'toxins';\nexport const PRODUCTS_MESO = 'meso';\nexport const PRODUCTS_FILLERS = 'fillers';\nexport const PRODUCTS_TABS = {\n    \"cosmetics\": {\n        \"toxins\" : [\"NABOTA_100U\", \"INNOTOX_50U\", \"HUTOX_100U\", \"MEDITOXIN_100U\", \"BOTULAX_200U\", \"NEURONOX_100U\", \"BOTULAX_100\"],\n        \"fillers\": [\"ELOHA\", \"HYAFILIA____\", \"CELOSOME____\", \"REPLENGEN_\", \"NEURAMIS___\", \"DERMALAX___\", \"MELINE_\"],\n        \"meso\": [\"HYARON\" , \"LUMI_EYE__\" , \"HIDR_INJ_\" , \"CELOSOME_AQUA_\" , \"DOTOTHY\", \"REGENOVUE_AQUASHINE\"]\n    },\n    \"lifting\": {\n        \"desc\": [\"Thread_leaflet.pdf-4_sok2w\" , \"liftkin_phi5\", \"bomb_alp3n\", \"gog_ll40l\", \"nose_n9ks6\",  \"mesh_kizny\", \"twin_gobvx\", \"arrow_wb8og\", \"Thread_leaflet.pdf-4_t9jk2d\"]\n    }\n};\n\n\n// contacts\nexport const USER_ID = 'user_1D0BOMjDfxEea3jbnCdmp';\nexport const TEMPLATE_ID = 'template_Jpj3zWxG';\nexport const NAME_LENGTH = 2;\nexport const MINIMUM_MESSAGE_LENGTH = 15;\nexport const MAX_MESSAGE_LENGTH = 250;\nexport const SERVICE_ID = \"gmail\";\n\n\n// footer\nexport const EMAIL_NAME = 'krj.shop7@gmail.com';\nexport const NETWORKS_NUMBER = '+82-10-387-75702';\nexport const ADDITIONAL_NUMBER = '+82-55-266-8400';\n","import React, {useState, useEffect} from 'react';\n\nconst LangContext = React.createContext({\n    lang: '',\n    currentLangData: {},\n    switchLang: () => {\n    },\n});\n\nexport default LangContext;\n\nexport const LangProvider = (props) => {\n    const [lang, setLang] = useState(window.localStorage.getItem('appUILang') || window.navigator.language);\n\n    useEffect(() => {\n        const selectedLang = window.localStorage.getItem('appUILang');\n\n        if (selectedLang) {\n            setLang(selectedLang);\n        }\n    }, [lang]);\n\n    const switchLang = ln => {\n        setLang(ln);\n        window.localStorage.setItem('appUILang', ln);\n    };\n\n    return (\n        <LangContext.Provider value={{\n            lang,\n            switchLang,\n            currentLangData: langData[lang]\n        }}>\n            {props.children}\n        </LangContext.Provider>\n    );\n};\n\nconst langData = {\n    'en-US': {\n        about: {\n            header: ['ABOUT US'],\n            desc: [' is a wholesale company which provides professional makeup products from South Korea and Japan.'],\n            spec: ['Our specialization is: '],\n            list: ['Wholesale supply of cosmetic and cosmetology products',\n                'OEM and ODM production',\n                'Own brand of cosmetology products called ELOHA'\n            ]\n        },\n        products: {\n            header: ['PRODUCTS'],\n            tabNames: {\n                'cosmetology': 'COSMETOLOGY',\n                'lifting': 'LIFTING THREAD',\n                'cosmetics': 'COSMETICS',\n                'other': 'OTHER PRODUCTS'\n            },\n            subTabNames: {\n                'toxins': 'TOXINS',\n                'fillers': 'FILLERS',\n                'meso': 'MESO'\n            }\n        },\n        contacts: {\n            header: ['CONTACTS'],\n            userName: ['YOUR NAME'],\n            userEmail: ['YOUR EMAIL'],\n            message: 'YOUR MESSAGE',\n            send: 'SEND',\n            emailError: 'Please enter a valid email address',\n            nameError: 'The field supposed to have more than 1 character',\n            textError: 'The field supposed to have more than 15 and less than 250 characters',\n            messageHeader: 'Form Completed',\n            messageSuccessContent: 'Message successfully sent!',\n            messageFailContent: 'Unfortunately the message cannot be sent due to technical issues. We apologize for inconvenience :('\n\n        },\n        footer: {\n            company: ['Export Company KoRuJa \"Direct Korea/ Direct Japan\"'],\n            info: ['CONTACT INFO'],\n            office: ['Head Office: '],\n            mail: ['Email']\n        },\n\n\n        app: {\n            language: 'en'\n        },\n    },\n    'ru-RU': {\n        about: {\n            header: ['О НАС'],\n            desc: [' оптовая экспортная компания профессиональной косметики и  косметологичкеских препаратов из Ю.Кореи и Японии.'],\n            spec: ['Наша специализация: '],\n            list: ['Оптовые поставки косметических и косметологических товаров',\n                'Производство OEM, ODM',\n                'Собственный бренд косметологической продукции ELOHA'\n            ]\n        },\n        products: {\n            header: ['ПРОДУКЦИЯ'],\n            tabNames: {\n                'cosmetology': 'КОСМЕТОЛОГИЯ',\n                'lifting': 'НИТЕВОЙ ЛИФТИНГ',\n                'cosmetics': 'КОСМЕТИКА',\n                'other': 'ДРУГИЕ ТОВАРЫ'\n            },\n            subTabNames: {\n                'toxins': 'ТОКСИНЫ',\n                'fillers': 'ФИЛЛЕРЫ',\n                'meso': 'МЕЗОПРЕПАРАТЫ'\n            }\n\n        },\n        contacts: {\n            header: 'КОНТАКТЫ',\n            userName: 'ВАШЕ ИМЯ',\n            userEmail: 'ВАШ EMAIL',\n            message: 'ВАШЕ СООБЩЕНИЕ',\n            send: 'ОТПРАВИТЬ',\n            emailError: 'Пожалуйста введите корректный email',\n            nameError: 'Поле должно содержать больше чем 1 символ',\n            textError: 'Поле должно содержать больше чем 15 и меньше чем 250 симоволов',\n            messageHeader: 'Форма заполненя',\n            messageSuccessContent: 'Сообщение успешно отправлено!',\n            messageFailContent: 'К сожалению на сайте технические неполадки. Мы извиняемся за неудобство :('\n\n        },\n        footer: {\n            company: ['Экспортная компания KoRuJa \"Прямая Корея/Прямая Япония\"'],\n            info: ['КОНТАКТНАЯ ИНФОРМАЦИЯ'],\n            office: ['Главный Офис: '],\n            mail: ['Эл. почта'],\n\n\n        },\n        app: {\n            language: 'ru'\n        },\n    },\n};\n","import React, {useContext, useState} from 'react';\nimport './style.css';\nimport {\n    Grid,\n    Header,\n    Image,\n    Form,\n    Input\n} from 'semantic-ui-react';\nimport {\n    CONTACTS_LINK,\n    USER_ID,\n    TEMPLATE_ID,\n    NAME_LENGTH,\n    MINIMUM_MESSAGE_LENGTH,\n    MAX_MESSAGE_LENGTH,\n    SERVICE_ID\n} from '../../../constants';\nimport LangContext from '../../../context/LangContext';\nimport * as emailjs from 'emailjs-com'\nimport Swal from 'sweetalert2';\n\n// eslint-disable-next-line\nconst EMAIL_VALIDATION = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\nconst checkEmail = value => EMAIL_VALIDATION.test(value);\nconst checkName = value => value && value.length >= NAME_LENGTH;\nconst checkMessage = value => value && value.length > MINIMUM_MESSAGE_LENGTH && value.length < MAX_MESSAGE_LENGTH;\n\n\nconst Contacts = () => {\n    const {contacts} = useContext(LangContext).currentLangData;\n    const initForm = {message: '', name: '', email: ''};\n    const [form, handleForm] = useState(initForm);\n    const [clickedButton, handleClick] = useState(false);\n    const passValid = checkMessage(form.message) && checkEmail(form.email) && checkName(form.name) && true;\n\n\n    const fireAlert = status => {\n\n        Swal.fire({\n            icon: status === 200 ? 'success' : 'error',\n            heightAuto: false,\n            title: contacts.messageHeader,\n            text: status === 200 ? contacts.messageSuccessContent : contacts.messageFailContent,\n            customClass: {\n                confirmButton: 'ui green basic button',\n                container: 'alert-container-class',\n            },\n            popup: 'swal2-show',\n\n        });\n\n        setTimeout(() => Swal.close(), 2500)\n\n    };\n\n    const handleSubmit = (form, passValid) => passValid && sendFeedback({\n        message_html: form.message,\n        from_name: form.name,\n        reply_to: form.email\n    });\n\n    const sendFeedback = values => {\n        const templateId = TEMPLATE_ID;\n        const user_id = USER_ID;\n        emailjs.send(\n            SERVICE_ID,\n            templateId,\n            values,\n            user_id)\n            .then(res => {\n                fireAlert(res.status);\n                handleClick(false);\n                handleForm(initForm)\n            })\n            .catch(err => {\n                fireAlert(err.status);\n                handleClick(false);\n                handleForm(initForm)\n            });\n    };\n\n    return (\n        <div\n            id=\"contacts\">\n            <Grid>\n                <Grid.Column\n                    computer={8}\n                    mobile={16}\n                    stretched\n                    className='contacts-image-column'\n                >\n                    <Image\n                        className='image-contacts'\n                        src={CONTACTS_LINK}\n                    />\n                </Grid.Column>\n                <Grid.Column\n                    className='contacts-form-column'\n                    computer={8}\n                    mobile={16}\n                >\n                    <Header\n                        textAlign='center'\n                        className='header-contacts'\n                        as='h2'>\n                        {contacts.header}\n                    </Header>\n                    <Form\n                        className='form-contacts'\n                    >\n                        <Form.Field\n                            required\n                            className='form-field-name'\n                        >\n                            <Form.Input\n                                required\n                                error={clickedButton && !checkName(form.name) && {\n                                    content: contacts.nameError\n                                }}\n                                control={Input}\n                                label={contacts.userName}\n                                onChange={(e, data) => {\n                                    handleForm({\n                                        ...form,\n                                        name: data.value\n                                    })\n                                }}\n                                value={form.name}\n                                placeholder={contacts.userName}\n                            />\n                        </Form.Field>\n\n                        <Form.Field\n                            required\n                            className='form-field-email'\n                        >\n                            <Form.Input\n                                required\n                                control={Input}\n                                error={clickedButton && !checkEmail(form.email) && {\n                                    content: contacts.emailError,\n                                }}\n                                label={contacts.userEmail}\n                                onChange={(e, data) => {\n                                    handleForm({\n                                        ...form,\n                                        email: data.value\n                                    })\n                                }}\n                                placeholder={contacts.userEmail}\n                                value={form.email}\n\n                            />\n                        </Form.Field>\n                        <div className='contacts-message-length'>{MAX_MESSAGE_LENGTH - form.message.length}</div>\n                        <Form.TextArea\n                            required\n                            error={clickedButton && !checkMessage(form.message) && {\n                                content: contacts.textError,\n                                // pointing: 'below',\n                            }}\n                            onChange={(e, data) => handleForm({...form, message: data.value})}\n                            value={form.message}\n                            label={contacts.message}\n                            placeholder={contacts.message}>\n\n                        </Form.TextArea>\n\n                        <Form.Button\n                            onClick={(e, data) => {\n                                handleClick(true);\n                                handleSubmit(form, passValid)\n                            }}\n\n                            className='contacts-button'\n                            type='submit'>\n                            {contacts.send}\n                        </Form.Button>\n                    </Form>\n\n                </Grid.Column>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Contacts;\n","import Contacts from './Contacts.js';\n\nexport default Contacts;\n","import About from './About.js';\n\nexport default About;\n","import React, {useContext} from 'react';\nimport {Grid, Container, Header, List} from 'semantic-ui-react';\nimport {ABOUT_PUBLIC_ID, CLOUD_NAME} from '../../../constants/';\nimport {Image as CloudImage} from 'cloudinary-react';\n// import aboutImg from '../../../assets/about.jpg';\nimport './style.scss';\nimport LangContext from '../../../context/LangContext';\n\nconst About = () => {\n    const {about} = useContext(LangContext).currentLangData;\n    return (\n        <Grid\n            id='about'\n            className=\"grid-about\"\n            divided='vertically'>\n            <Grid.Column\n                computer={8}\n                mobile={16}\n                className='first-column-about'>\n                <Container\n                    fluid\n                    className='about-desc'>\n                    <Header\n                        className='header-about-desc'\n                        as='h2'>\n                        {about.header}\n                    </Header>\n                    <p\n                        className='paragraph-about-desc'\n                    >\n                        <b>KoRuJa </b>{about.desc}\n                    </p>\n\n                    <p className='paragraph-about-desc'>\n                        {about.spec}\n                    </p>\n\n                    <List className='list-content-about'\n                    >\n                        {about.list.map((desc, key) => {\n                            return <List.Item key={key}>\n                                <List.Icon\n                                    size={window.innerWidth < 768 ? 'small' : 'small'}\n                                    corent='bottom left'\n                                    className=\"about-icon\"\n                                    name='checkmark'\n                                />\n                                <List.Content\n                                >\n                                    {desc}\n                                </List.Content>\n                            </List.Item>\n                        })}\n                    </List>\n                </Container>\n\n\n            </Grid.Column>\n            <Grid.Column\n                computer={8}\n                mobile={16}\n                stretched\n                className='second-column-about'>\n                {/*<Image src={aboutImg}/>*/}\n                <CloudImage\n                    alt={\"\"}\n                    className='about-image'\n                    cloudName={CLOUD_NAME}\n                    publicId={ABOUT_PUBLIC_ID}\n                />\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nexport default About;\n","import React, {useContext} from 'react';\nimport {Grid, Tab, Reveal, Header, Transition} from \"semantic-ui-react\";\nimport {\n    PRODUCTS_TABS,\n    PRODUCTS,\n    CLOUD_NAME,\n    PRODUCTS_TOXINS,\n    PRODUCTS_MESO,\n    PRODUCTS_FILLERS\n} from \"../../../../constants/\";\nimport LangContext from '../../../../context/LangContext';\nimport {Image as CloudImage} from \"cloudinary-react\";\n\nconst fetchImages = (value) => {\n    return (\n        <Grid>\n            <Grid.Row>\n                {PRODUCTS_TABS.cosmetics[value].map((name, key) => {\n                    return <Transition\n                        key={key}\n                        visible={true}\n                        directional\n                        animation='zoom'\n                        transitionOnMount={true}\n                        // onStart={(e, data) => console.log(data)}\n                        duration={1500}>\n                        <Grid.Column\n                            className='products-column'\n                            verticalAlign='middle'\n                            key={key}\n                            largeScreen={8}\n                            tablet={8}\n                            computer={8}\n                            widescreen={5}\n                            mobile={16}\n                        >\n                            <Reveal\n                                className='products-reveal'\n                                animated='fade'>\n                                <Reveal.Content visible>\n                                    <Grid.Column\n                                        className='products-column-image'\n                                        key={key}>\n                                        <CloudImage\n                                            alt={\"\"}\n                                            cloudName={CLOUD_NAME}\n                                            className='products-images'\n                                            publicId={`${PRODUCTS}/${value}/${name}`}\n                                        />\n                                    </Grid.Column>\n                                </Reveal.Content>\n                                <Reveal.Content\n                                    className='product-name'\n                                    hidden>\n                                    <Header\n                                        as={'h3'}\n                                    >\n                                        {name.split('_').join(' ')}\n                                    </Header>\n                                </Reveal.Content>\n                                <Reveal/>\n                            </Reveal>\n                        </Grid.Column>\n                    </Transition>\n                })}\n            </Grid.Row>\n        </Grid>\n    )\n};\n\nconst createPanes = products => {\n    return [\n        {\n            menuItem: products.subTabNames.toxins,\n            render: () => <Tab.Pane attached={false}>\n                <Transition\n                    visible={true}\n                    animation='fade'\n                    transitionOnMount={true}\n                    duration={1500}>\n                    {fetchImages(PRODUCTS_TOXINS)}\n                </Transition>\n            </Tab.Pane>\n        },\n        {\n            menuItem: products.subTabNames.fillers,\n            render:\n                () => <Tab.Pane attached={false}>\n                    <Transition\n                        visible={true}\n                        animation='fade'\n                        transitionOnMount={true}\n                        duration={1500}>\n                        {fetchImages(PRODUCTS_FILLERS)}\n                    </Transition>\n                </Tab.Pane>\n        },\n        {\n            menuItem: products.subTabNames.meso,\n            render:\n                () => <Tab.Pane attached={false}>\n                    {fetchImages(PRODUCTS_MESO)}\n                </Tab.Pane>\n        },\n    ]\n};\n\n\nconst Cosmetology = () => {\n    const {products} = useContext(LangContext).currentLangData;\n    const innerWidth = window.innerWidth > 625;\n    return (\n        <div>\n            <Tab\n                className='cosmetics-left-tab'\n                menu={{\n                    fluid: innerWidth,\n                    vertical: innerWidth,\n                    tabular: innerWidth,\n                    pointing: !innerWidth,\n                    secondary: !innerWidth\n                }}\n                panes={createPanes(products)}\n            />\n        </div>\n    );\n};\n\n\nexport default Cosmetology;\n","import React, {useState} from 'react';\nimport {Grid, Modal, Button, Container, Transition} from \"semantic-ui-react\";\nimport {PRODUCTS_TABS, PRODUCTS, CLOUD_NAME} from \"../../../../constants/\";\nimport {Image as CloudImage} from \"cloudinary-react\";\n\nconst findNumberInString = value => parseInt(value.replace(/^\\D+/g, ''))\n\nconst LiftingThread = () => {\n    const [expanded, setExpand] = useState(false);\n    const [moused, setMoused] = useState(false);\n    const [imageKey, setImageKey] = useState(0);\n    const [hoveredColumn, setHoveredColumn] = useState(0);\n\n    const fetchImages = (value) => {\n        return (\n            <Grid className={'products-lifting-grid'}>\n                <Grid.Row\n                >\n                    {PRODUCTS_TABS.lifting.desc.map((name, key) => {\n                        return <Transition\n                            key={key}\n                            visible={true}\n                            animation='zoom'\n                            transitionOnMount={true}\n                            unmountOnHide={true}\n                            duration={1500}>\n                            <Grid.Column\n                                className={`products-lifting-column ${key}`}\n                                style={{top: key === 0 && window.innerWidth > 768 && '-20px'}}\n                                verticalAlign='middle'\n                                key={key}\n                                largeScreen={5}\n                                tablet={7}\n                                computer={5}\n                                widescreen={3}\n                                mobile={16}\n                                onMouseEnter={(props) => {\n                                    setHoveredColumn(findNumberInString(props.currentTarget.className));\n                                    setMoused(true)\n                                }}\n                                onMouseLeave={() => setMoused(false)}\n                            >\n                                <Button\n                                    className='products-lifting-button-expand'\n                                    icon={'expand'}\n                                    onClick={() => {\n                                        setExpand(true);\n                                        setImageKey(key)\n                                    }}\n                                    style={{\n                                        visibility: key === hoveredColumn && moused ? 'visible' : 'hidden'\n                                    }}\n                                />\n\n                                <CloudImage\n                                    alt={\"\"}\n                                    cloudName={CLOUD_NAME}\n                                    className='products-lifting-image'\n                                    publicId={`${PRODUCTS}/${value}/${name}`}\n                                />\n\n                            </Grid.Column>\n                        </Transition>\n                    })}\n                </Grid.Row>\n            </Grid>\n        )\n    };\n\n    const setModalImage = (value, imageKey) => {\n        return PRODUCTS_TABS.lifting.desc.map((name, key) => {\n            return imageKey === key && <CloudImage\n                key={key}\n                alt={\"\"}\n                cloudName={CLOUD_NAME}\n                className='products-lifting-modal-image'\n                publicId={`${PRODUCTS}/${value}/${name}`}\n            />\n\n        })\n    };\n\n    return (\n        <div className='products-lifting-thread'>\n            <Container fluid>\n                {fetchImages('lifting')}\n            </Container>\n            <Modal\n                className='products-lifting-modal'\n                closeIcon={<Button\n                    className='products-lifting-modal-button-close'\n                    icon='close'\n                    size='huge'\n                />\n                }\n                onClose={() => setExpand(false)}\n                open={expanded}>\n                <Modal.Content\n                    className='products-lifting-modal-content'\n                >\n                    {setModalImage('lifting', imageKey)}\n                </Modal.Content>\n            </Modal>\n        </div>\n    );\n};\n\n\nexport default LiftingThread;\n","import React, {useContext} from 'react';\nimport {Header, Tab} from 'semantic-ui-react';\nimport {Cosmetology, LiftingThread} from './Components/';\nimport LangContext from '../../../context/LangContext';\nimport './style.scss';\n\n\nconst createPanes = products => {\n    return [\n\n        {\n            menuItem: products.tabNames.lifting,\n            render: () => <Tab.Pane attached={false}><LiftingThread/></Tab.Pane>,\n        },\n        {\n            menuItem: products.tabNames.cosmetology,\n            render: () => <Tab.Pane attached={false}><Cosmetology context={products}/></Tab.Pane>,\n        },\n        {\n            menuItem: products.tabNames.cosmetics,\n            render: () => <Tab.Pane attached={false}>Tab 3 Content</Tab.Pane>,\n        },\n        {\n            menuItem: products.tabNames.other,\n            render: () => <Tab.Pane attached={false}>Tab 4 Content</Tab.Pane>,\n        },\n    ]\n};\n\nconst Products = () => {\n    const {products} = useContext(LangContext).currentLangData;\n    return (\n        <div id=\"products\">\n            <Header\n                textAlign='center'\n                className='header-products'\n                as='h2'>\n                {products.header}\n            </Header>\n            <div className=\"products-tab\">\n                <Tab\n                    menu={{secondary: true}}\n                    panes={createPanes(products)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Products;\n","import Products from './Products';\n\nexport default Products;\n","import routes from './routes';\n\n\nexport default routes;\n","import Header from \"../view/Components/Header\";\nimport About from \"../view/Components/About\";\nimport Products from \"../view/Components/Products\";\nimport Contacts from \"../view/Components/Contacts\";\n\nconst routes = [\n    {\n        name: [\"ГЛАВНАЯ\", \"HOME\"],\n        path: \"/#home\",\n        icon: \"home\",\n        component: Header\n    },\n    {\n        name: [\"О НАС\", \"ABOUT US\"],\n        path: \"/#about\",\n        icon: \"bolt\",\n        component: About\n    },\n    {\n        name: [\"ПРОДУКЦИЯ\", \"PRODUCTS\"],\n        path: \"/#products\",\n        icon: \"info\",\n        component: Products\n    },\n    {\n        name: [\"КОНТАКТЫ\", \"CONTACTS\"],\n        path: \"/#contacts\",\n        icon: \"phone\",\n        component: Contacts\n    },\n];\n\nexport default routes;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, {useContext, useState} from 'react';\nimport logo from \"../../../assets/image2.svg\";\nimport './style.scss';\nimport {\n    Grid,\n    Image,\n    Container,\n    Menu,\n    Header,\n    Item,\n    Icon\n} from 'semantic-ui-react';\nimport LangContext from '../../../context/LangContext';\nimport {\n    GB_FLAG_LINK,\n    RU_FLAG_LINK,\n    CLOUD_NAME,\n    PUBLIC_ID_INSTAGRAM_ICON,\n    EMAIL_NAME,\n    NETWORKS_NUMBER,\n    ADDITIONAL_NUMBER,\n    LOGO_NAME\n} from '../../../constants';\nimport {Image as CloudImage} from 'cloudinary-react';\nimport routes from '../../../routes';\n\n\nconst Footer = () => {\n    const {footer, app} = useContext(LangContext).currentLangData;\n    const {switchLang} = useContext(LangContext);\n    const navIndex = app.language === 'ru' ? 0 : 1;\n    const currentYear = new Date().getFullYear()\n    const [flag, switchFlag] = useState(true);\n    const currentFlag = flag ? GB_FLAG_LINK : RU_FLAG_LINK;\n    const currentLanguage = flag ? 'en-US' : 'ru-RU';\n\n    return (\n        <div id=\"footer\">\n            <Grid>\n                <Grid.Column\n                    computer={5}\n                    widescreen={5}\n                    mobile={3}\n                    className='footer-column-logo'\n                >\n                    <Container\n\n                        className=\"footer-container-logo\"\n                    >\n                        <Image src={logo}/>\n                        <span className=\"footer-logo-name logo-name\">{LOGO_NAME}</span>\n                    </Container>\n                    <Container\n                        className=\"footer-container-desc\"\n                    >   2004-{currentYear} <br/>\n                        {footer.company}\n                        <br/>\n                        <CloudImage\n                            cloudName={CLOUD_NAME}\n                            className=\"icon-instagram-default icon-footer-instagram\"\n                            publicId={PUBLIC_ID_INSTAGRAM_ICON}\n                        />\n                    </Container>\n                </Grid.Column>\n                <Grid.Column\n                    computer={5}\n                    widescreen={5}\n                    className=\"footer-menu-column\">\n                    <Menu\n                        text\n                        vertical\n                        className=\"footer-menu\"\n                    >\n                        <Menu.Menu>\n                            {routes.map((item, key) => {\n                                return <Menu.Item\n                                    key={key}\n                                    as='a'\n                                    href={item.path}\n                                    className=\"footer-menu-items nav-bar-menu-items\"\n                                >\n                                    {item.name[navIndex]}\n                                </Menu.Item>\n\n                            })}\n                            <Menu.Item>\n                                <Item.Image\n                                    as='button'\n                                    className='nav-bar-language'\n                                    src={currentFlag}\n                                    onClick={() => {\n                                        switchFlag(!flag);\n                                        switchLang(currentLanguage)\n                                    }}\n                                />\n                            </Menu.Item>\n                        </Menu.Menu>\n                    </Menu>\n                </Grid.Column>\n                <Grid.Column\n                    tablet={6}\n                    widescreen={5}\n                    largescreen={6}\n                    computer={5}\n                    mobile={16}\n                >\n                    <Header\n                        textAlign='center'\n                        className='footer-contacts-header'\n                        as='h4'>\n                        {footer.info}\n                    </Header>\n                    <Container className='footer-contacts-info'>\n                        <div className='footer-mobile-phones'>\n                            <Icon\n                                color={'brown'}\n                                name=\"phone\"/>\n                            <p>\n                                {NETWORKS_NUMBER}<br/>\n                                {ADDITIONAL_NUMBER}\n                            </p>\n                        </div>\n                        <p className='footer-network-info'>\n                            <b> <Icon\n                                color={'grey'}\n                                name=\"mail\"/>\n                            </b> {EMAIL_NAME} <br/>\n                            <b> <Icon\n                                size={\"large\"}\n                                color={'blue'}\n                                name=\"telegram\"/>\n                                <Icon\n                                    size={\"large\"}\n                                    color={'violet'}\n                                    name=\"viber\"/> </b>\n                            {NETWORKS_NUMBER}\n                        </p>\n                        <p>\n                            <b>{footer.office}</b> 1F, Sinwol-Ro 24,<br/>\n                            Uichangu,Changwon City Korea , 51443\n                        </p>\n\n                    </Container>\n                </Grid.Column>\n            </Grid>\n        </div>\n    );\n\n};\n\nexport default Footer;\n","import ScrollButton from './ScrollButton';\n\nexport default ScrollButton;\n","import React, {useRef, useEffect} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport './style.scss';\n\n\nconst Header = () => {\n    const scrollRef = useRef(null);\n\n    useEffect(() => {\n        window.addEventListener('scroll', () => scrollFunction(), true);\n    });\n\n    const scrollFunction = () => {\n        if (scrollRef.current) {\n            scrollRef.current.children[0].style.visibility =\n                scrollRef.current.closest(\"body\").scrollTop < (window.innerHeight / 2) || window.innerWidth < 768 ? \"hidden\" : \"visible\"\n        }\n    };\n\n    const scrollToTop = () => scrollRef.current.closest(\"body\").scrollTop = scrollRef.current && 0;\n    return (\n        <div\n            id=\"scroll\"\n            ref={scrollRef}\n\n        >\n            <Button\n                icon='arrow up'\n                size={'medium'}\n                onClick={() => scrollToTop()}\n                className=\"scroll-button\"\n            />\n        </div>\n    )\n};\nexport default Header;\n","import React, {useContext, useState} from 'react';\nimport './style.css';\nimport { Image, List} from \"semantic-ui-react\";\nimport { GB_FLAG_LINK, RU_FLAG_LINK} from '../../../constants';\nimport LangContext from '../../../context/LangContext';\nimport routes from '../../../routes';\n\nconst MobileMenu = () => {\n    const [menu, toggleMenu] = useState(false);\n    const [flag, switchFlag] = useState(true);\n    const {switchLang} = useContext(LangContext);\n    const currentFlag = flag ? GB_FLAG_LINK : RU_FLAG_LINK;\n    const currentLanguage = flag ? 'en-US' : 'ru-RU';\n\n\n    const hamburgerClass = menu ? 'open' : '';\n    const menuClass = menu ? 'mobile-open-menu' : 'mobile-close-menu';\n    return (<div className='mobile-nav-bar mobile-view'>\n            <div className=\"menu-icon-wrapper float-left\" onClick={() => toggleMenu(!menu)}>\n                <div id=\"hamburger\" className={hamburgerClass}>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </div>\n\n            <div className={menuClass}>\n                {routes.map((item, key) => {\n                    return <List.Item\n                        name={'error'}\n                        key={key}\n                        as='a'\n                        href={item.path}\n                        className='mobile-sidebar-menu'\n                    >\n                        <List.Icon name={item.icon}/>\n                        <List.Content>{item.name[flag ? 0 : 1]}</List.Content>\n                    </List.Item>\n\n                })}\n\n                <List.Item>\n                    <Image\n                        className='mobile-nav-bar-language'\n                        src={currentFlag}\n                        onClick={() => {\n                            switchFlag(!flag);\n                            switchLang(currentLanguage)\n                        }}\n                    />\n                </List.Item>\n            </div>\n        </div>\n    )\n}\n\nexport default MobileMenu;\n","import NavBar from './NavBar.js';\n\nexport default NavBar\n","import React, {useContext, useState} from 'react';\nimport './style.css';\nimport logo from '../../../assets/image2.svg';\nimport {\n    Menu,\n    Container,\n    Image,\n    Sticky,\n    Item\n} from \"semantic-ui-react\";\nimport {\n    GB_FLAG_LINK,\n    RU_FLAG_LINK\n} from '../../../constants';\nimport LangContext from '../../../context/LangContext';\nimport MobileMenu from './MobileNavBar';\nimport routes from \"../../../routes\";\n\nconst NavBar = () => {\n    const [flag, switchFlag] = useState(true);\n    const {switchLang} = useContext(LangContext);\n    //\n    const currentFlag = flag ? GB_FLAG_LINK : RU_FLAG_LINK;\n    const currentLanguage = flag ? 'en-US' : 'ru-RU';\n\n    return (\n        <div>\n            <Sticky className='nav-bar-sticky'>\n                <Container\n                    className='mobile-nav-bar-container'\n                    fluid>\n                    <Menu\n                        className=\"nav-bar-menu\"\n                        borderless>\n                        <MobileMenu/>\n                        <Menu.Menu\n                        className='logo-menu-item'\n                        >\n                            <Menu.Item\n                                as={'a'}\n                                href=\"/#home\"\n                                className=\"logo-container\"\n                            >\n                                <Image src={logo}/>\n                                <span className=\"logo-name\">KRJ</span>\n                            </Menu.Item>\n                        </Menu.Menu>\n                        <Menu.Menu position={\"right\"}>\n                            {routes.map((item, key) => {\n                                return <Menu.Item\n                                    key={key}\n                                    as='a'\n                                    href={item.path}\n                                    className=\"nav-bar-menu-items\"\n                                >\n                                    {item.name[flag ? 0 : 1]}\n                                </Menu.Item>\n\n                            })}\n                            <Menu.Item>\n                                <Item.Image\n                                    as='button'\n                                    className='nav-bar-language'\n                                    src={currentFlag}\n                                    onClick={() => {\n                                        switchFlag(!flag);\n                                        switchLang(currentLanguage)\n                                    }}\n                                />\n                            </Menu.Item>\n                        </Menu.Menu>\n                    </Menu>\n                </Container>\n            </Sticky>\n\n        </div>\n    );\n};\n\nexport default NavBar;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Header, Contacts, Footer, About, Products, ScrollButton, NavBar} from './view/Components';\nimport {createBrowserHistory} from 'history';\nimport {Switch, Route, Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {LangProvider} from './context/LangContext';\nimport routes from './routes';\n\n// styles\nimport './style/index.scss';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'sweetalert2/src/sweetalert2.scss';\n\n\nconst hist = createBrowserHistory();\nconst routing = (\n    <LangProvider>\n        <div>\n            <Router history={hist}>\n                <div>\n                    <NavBar/>\n                    <Switch>\n                        {routes.map((item, key) =>\n                            <Route\n                                key={key}\n                                path={item.path}\n                                component={item.component}/>\n                        )}\n                    </Switch>\n                </div>\n            </Router>\n            <ScrollButton/>\n            <Header/>\n            <About/>\n            <Products/>\n            <Contacts/>\n            <Footer/>\n        </div>\n    </LangProvider>\n)\n\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}