{"version":3,"sources":["assets/image2.svg","view/Components/Header/index.js","view/Components/Header/Header.js","constants/index.js","context/LangContext.js","view/Components/Contacts/Contacts.js","view/Components/Contacts/index.js","view/Components/About/index.js","view/Components/About/About.js","view/Components/Products/Components/Cosmetology.js","view/Components/Products/Components/LiftingThread.js","view/Components/Products/Components/Cosmetics.js","view/Components/Products/Products.js","view/Components/Products/index.js","routes/index.js","routes/routes.js","view/Components/Footer/index.js","view/Components/Footer/Footer.js","view/Components/ScrollButton/index.js","view/Components/ScrollButton/ScrollButton.js","view/Components/NavBar/MobileNavBar.js","view/Components/NavBar/index.js","view/Components/NavBar/NavBar.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","cloudName","className","publicId","href","target","rel","GB_FLAG_LINK","RU_FLAG_LINK","PRODUCTS_TABS","cosmetics","toxins","fillers","meso","lifting","desc","PRODUCTS_COSMETICS_STEPS","name","icon","color","image","LangContext","React","createContext","lang","currentLangData","switchLang","langData","about","header","current","spec","list","products","tabNames","cosmetology","subTabNames","services","steps","choice","test","prod","contacts","userName","userEmail","message","send","emailError","nameError","textError","messageHeader","messageSuccessContent","messageFailContent","footer","company","info","office","mail","app","language","EMAIL_VALIDATION","checkEmail","value","checkName","length","checkMessage","Contacts","useContext","initForm","email","useState","form","handleForm","clickedButton","handleClick","passValid","fireAlert","status","Swal","fire","heightAuto","title","text","customClass","confirmButton","container","popup","setTimeout","close","sendFeedback","values","emailjs","then","res","catch","err","Grid","Column","computer","mobile","stretched","Image","src","textAlign","as","Form","Field","required","Input","error","content","control","label","onChange","e","data","placeholder","TextArea","Button","onClick","message_html","from_name","reply_to","handleSubmit","type","About","divided","Container","fluid","List","map","key","Item","Icon","size","window","innerWidth","corent","Content","alt","fetchImages","Row","Transition","visible","directional","animation","transitionOnMount","duration","verticalAlign","largeScreen","tablet","widescreen","Reveal","animated","hidden","split","join","Card","cloudƒName","createPanes","menuItem","render","Tab","Pane","attached","Cosmetology","menu","vertical","tabular","pointing","secondary","panes","LiftingThread","expanded","setExpand","moused","setMoused","imageKey","setImageKey","hoveredColumn","setHoveredColumn","unmountOnHide","style","top","onMouseEnter","props","parseInt","replace","findNumberInString","currentTarget","onMouseLeave","visibility","Modal","closeIcon","onClose","open","setModalImage","CustomizedStep","currentStep","selectStep","curentKey","setKey","Step","Group","widths","stackable","step","active","Title","Segment","item","Description","Cosmetics","context","Products","routes","path","component","Footer","navIndex","currentYear","Date","getFullYear","flag","switchFlag","currentFlag","currentLanguage","logo","Menu","largescreen","ScrollButton","scrollRef","useRef","useEffect","addEventListener","scrollFunction","children","closest","scrollTop","innerHeight","ref","MobileMenu","toggleMenu","hamburgerClass","menuClass","NavBar","Sticky","borderless","position","Boolean","location","hostname","match","hist","createBrowserHistory","routing","localStorage","getItem","navigator","setLang","selectedLang","Provider","ln","setItem","history","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6571088.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image2.50265e9e.svg\";","import Header from './Header.js';\n\nexport default Header;\n","import React from 'react';\nimport {Image as CloudImage} from \"cloudinary-react\";\nimport './style.scss';\n\n\nconst Header = () => {\n    return (\n        <div\n            id=\"home\"\n        >\n            <CloudImage\n                cloudName={'koruja'}\n                className='banner'\n                publicId=\"koruja/assets/bannerr.jpg\">\n            </CloudImage>\n            <a\n                href={'https://www.instagram.com/krj.export/'}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <CloudImage\n                    cloudName={'koruja'}\n                    className={'icon-instagram-default icon-banner-instagram'}\n                    publicId=\"koruja/assets/instagram0.2_v2ozw6\">\n                </CloudImage>\n            </a>\n        </div>\n    )\n};\nexport default Header;\n","// links\nexport const CONTACTS_LINK =\n  \"https://res.cloudinary.com/koruja/image/upload/v1581307515/koruja/assets/CONTACTS.jpg\";\nexport const GB_FLAG_LINK =\n  \"https://res.cloudinary.com/koruja/image/upload/v1581557031/koruja/assets/gb.png\";\nexport const RU_FLAG_LINK =\n  \"https://res.cloudinary.com/koruja/image/upload/v1581644536/koruja/assets/RU_p32pbt.png\";\nexport const PUBLIC_ID_INSTAGRAM_ICON = \"koruja/assets/instagram0.2_v2ozw6\";\n// common\nexport const LOGO_NAME = \"KRJ\";\nexport const CLOUD_NAME = \"koruja\";\n// about\nexport const ABOUT_PUBLIC_ID = \"koruja/assets/about_exbp76.jpg\";\n// products\nexport const PRODUCTS = \"products\";\nexport const PRODUCTS_TOXINS = \"toxins\";\nexport const PRODUCTS_MESO = \"meso\";\nexport const PRODUCTS_FILLERS = \"fillers\";\nexport const PRODUCTS_TABS = {\n  cosmetics: {\n    toxins: [\n      \"NABOTA_100U\",\n      \"INNOTOX_50U\",\n      \"HUTOX_100U\",\n      \"MEDITOXIN_100U\",\n      \"BOTULAX_200U\",\n      \"NEURONOX_100U\",\n      \"BOTULAX_100\"\n    ],\n    fillers: [\n      \"ELOHA\",\n      \"HYAFILIA____\",\n      \"CELOSOME____\",\n      \"REPLENGEN_\",\n      \"NEURAMIS___\",\n      \"DERMALAX___\",\n      \"MELINE_\"\n    ],\n    meso: [\n      \"HYARON\",\n      \"LUMI_EYE__\",\n      \"HIDR_INJ_\",\n      \"CELOSOME_AQUA_\",\n      \"DOTOTHY\",\n      \"REGENOVUE_AQUASHINE\"\n    ]\n  },\n  lifting: {\n    desc: [\n      \"Thread_leaflet.pdf-4_sok2w\",\n      \"Thread_leaflet.pdf-4_t9jk2d\",\n      \"liftkin_phi5\",\n      \"bomb_alp3n\",\n      \"gog_ll40l\",\n      \"nose_n9ks6\",\n      \"mesh_kizny\",\n      \"twin_gobvx\",\n      \"arrow_wb8og\"\n    ]\n  }\n};\n\nexport const PRODUCTS_COSMETICS_STEPS = [\n  {\n    name: \"choice\",\n    icon: \"info\",\n    color: \"blue\",\n    image: \"odm_oem_4_ljkk92.jpg\"\n  },\n  {\n    name: \"test\",\n    icon: \"industry\",\n    color: \"yellow\",\n    image: \"experiment_dvmj5k1\"\n  },\n  {\n    name: \"prod\",\n    icon: \"truck\",\n    color: \"green\",\n    image: \"mass_prod_3_fgmzwt\"\n  }\n];\n\n// contacts\n// export const USER_ID = \"user_1D0BOMjDfxEea3jbnCdmp\";\n// export const TEMPLATE_ID = \"template_Jpj3zWxG\";\n// furute \nexport const USER_ID = \"user_PaYNGMPfAiBf1CSGaI3Vq\";\nexport const TEMPLATE_ID = \"template_OqhctrzW\";\nexport const NAME_LENGTH = 2;\nexport const MINIMUM_MESSAGE_LENGTH = 15;\nexport const MAX_MESSAGE_LENGTH = 250;\nexport const SERVICE_ID = \"gmail\";\n\n// footer\nexport const EMAIL_NAME = \"krj.shop7@gmail.com\";\nexport const NETWORKS_NUMBER = \"+82-10-387-75702\";\nexport const ADDITIONAL_NUMBER = \"+82-55-266-8400\";\n","import React, { useState, useEffect } from \"react\";\n\nconst LangContext = React.createContext({\n  lang: \"\",\n  currentLangData: {},\n  switchLang: () => {}\n});\n\nexport default LangContext;\n\nexport const LangProvider = props => {\n  const [lang, setLang] = useState(\n    window.localStorage.getItem(\"appUILang\") || window.navigator.language\n  );\n\n  useEffect(() => {\n    const selectedLang = window.localStorage.getItem(\"appUILang\");\n\n    if (selectedLang) {\n      setLang(selectedLang);\n    }\n  }, [lang]);\n\n  const switchLang = ln => {\n    setLang(ln);\n    window.localStorage.setItem(\"appUILang\", ln);\n  };\n\n  return (\n    <LangContext.Provider\n      value={{\n        lang,\n        switchLang,\n        currentLangData: langData[lang]\n      }}\n    >\n      {props.children}\n    </LangContext.Provider>\n  );\n};\n\nconst langData = {\n  \"en-US\": {\n    about: {\n      header: [\"ABOUT US\"],\n      desc: [\n        \" is a wholesale company which provides professional makeup products from South Korea and Japan.\"\n      ],\n      current: [\n        \"Currently, KoRuJa Trading is an official dealer of more than 10 brands. Trademarks of brands are already registered or in the process of registration in Russia, Ukraine and the countries of the Eurasian Union.\"\n      ],\n      spec: [\"Our specialization is: \"],\n      list: [\n        \"Wholesale supply of cosmetic and cosmetology products\",\n        \"OEM and ODM production\",\n        \"Own brand of cosmetology products called ELOHA\"\n      ]\n    },\n    products: {\n      header: [\"PRODUCTS\"],\n      tabNames: {\n        cosmetology: \"COSMETOLOGY\",\n        lifting: \"LIFTING THREAD\",\n        cosmetics: \"COSMETICS AND OTHER PRODUCTS\"\n      },\n      subTabNames: {\n        toxins: \"TOXINS\",\n        fillers: \"FILLERS\",\n        meso: \"MESO\"\n      },\n      services: {\n        header: [\n          \"Contract manufacturing of cosmetics and accessories in South Korea under your own brand\"\n        ],\n        steps: {\n          choice: {\n            header: \"ODM / OEM\",\n            desc: [\n              \"OEM is a company that produces parts and equipment that may be marketed by another manufacturer. \",\n              \"ODM is a company that designs and manufactures a product, as specified, that is eventually rebranded by another firm for sale.\"\n            ]\n          },\n          test: {\n            header: \"Experimental sample\",\n            desc: [\n              \"After the work plan has been agreed and approved, the process of manufacturing an experimental sample for testing is about 20 days.\"\n            ]\n          },\n          prod: {\n            header: \"Mass production\",\n            desc: [\n              \"The term of mass production depends on the production volume, which usually takes around 30 days.\"\n            ]\n          }\n        }\n      }\n    },\n    contacts: {\n      header: [\"CONTACTS\"],\n      userName: [\"YOUR NAME\"],\n      userEmail: [\"YOUR EMAIL\"],\n      message: \"YOUR MESSAGE\",\n      send: \"SEND\",\n      emailError: \"Please enter a valid email address\",\n      nameError: \"The field supposed to have more than 1 character\",\n      textError:\n        \"The field supposed to have more than 15 and less than 250 characters\",\n      messageHeader: \"Form Completed\",\n      messageSuccessContent: \"Message has been successfully sent!\",\n      messageFailContent:\n        \"Unfortunately the message cannot be sent due to technical issues. We apologize for inconvenience :(\"\n    },\n    footer: {\n      company: ['Export Company KoRuJa \"Direct Korea/ Direct Japan\"'],\n      info: [\"CONTACT INFO\"],\n      office: [\"Head Office: \"],\n      mail: [\"Email\"]\n    },\n\n    app: {\n      language: \"en\"\n    }\n  },\n  \"ru-RU\": {\n    about: {\n      header: [\"О НАС\"],\n      desc: [\n        \" оптовая экспортная компания профессиональной косметики и  косметологичкеских препаратов из Ю.Кореи и Японии.\"\n      ],\n      current: [\n        \"В настоящее время компания KoRuJa Trading является официальным дилером более 10 торговых марок. Торговые марки брендов уже зарегистрированы или в процессе регистрации на территории России, Украины и стран Евроазиатского Союза.\"\n      ],\n      spec: [\"Наша специализация: \"],\n      list: [\n        \"Оптовые поставки косметических и косметологических товаров\",\n        \"Производство OEM, ODM\",\n        \"Собственный бренд косметологической продукции ELOHA\"\n      ]\n    },\n    products: {\n      header: [\"ПРОДУКЦИЯ\"],\n      tabNames: {\n        cosmetology: \"КОСМЕТОЛОГИЯ\",\n        lifting: \"НИТЕВОЙ ЛИФТИНГ\",\n        cosmetics: \"КОСМЕТИКА И ДРУГИЕ ТОВАРЫ\"\n      },\n      subTabNames: {\n        toxins: \"ТОКСИНЫ\",\n        fillers: \"ФИЛЛЕРЫ\",\n        meso: \"МЕЗОПРЕПАРАТЫ\"\n      },\n      services: {\n        header: [\n          \"Контрактное производство косметики и аксессуаров в Ю.Корее под собственной торговой маркой\"\n        ],\n        steps: {\n          choice: {\n            header: \"ODM / OEM\",\n\n            desc: [\n              \"OEM – контрактное производство, где завод изготовитель выполнит согласно вашей рецептуре и техническому заданию весь комплекс работ по производству косметического продукта.\",\n              \"ODM – включает полный цикл разработки и производства, в том числе составление рецептуры, нейминга и  дизайна упаковки.\"\n            ]\n          },\n          test: {\n            header: \"Экспериментальный образец\",\n            desc: [\n              \"После того, как план работ согласован и утверждён, процесс изготовления экспериментального образца для тестирования составляет порядка 20 дней.\"\n            ]\n          },\n          prod: {\n            header: \"Серийное производство\",\n            desc: [\n              \"Срок серийного производства зависит от объёмов партии и составляет в среднем от 30 дней.\"\n            ]\n          }\n        }\n      }\n    },\n    contacts: {\n      header: \"КОНТАКТЫ\",\n      userName: \"ВАШЕ ИМЯ\",\n      userEmail: \"ВАШ EMAIL\",\n      message: \"ВАШЕ СООБЩЕНИЕ\",\n      send: \"ОТПРАВИТЬ\",\n      emailError: \"Пожалуйста введите корректный email\",\n      nameError: \"Поле должно содержать больше чем 1 символ\",\n      textError:\n        \"Поле должно содержать больше чем 15 и меньше чем 250 симоволов\",\n      messageHeader: \"Форма заполненя\",\n      messageSuccessContent: \"Сообщение успешно отправлено!\",\n      messageFailContent:\n        \"К сожалению на сайте технические неполадки. Мы извиняемся за неудобство :(\"\n    },\n    footer: {\n      company: ['Экспортная компания KoRuJa \"Прямая Корея/Прямая Япония\"'],\n      info: [\"КОНТАКТНАЯ ИНФОРМАЦИЯ\"],\n      office: [\"Главный Офис: \"],\n      mail: [\"Эл. почта\"]\n    },\n    app: {\n      language: \"ru\"\n    }\n  }\n};\n","import React, {useContext, useState} from 'react';\nimport './style.css';\nimport {\n    Grid,\n    Header,\n    Image,\n    Form,\n    Input\n} from 'semantic-ui-react';\nimport {\n    CONTACTS_LINK,\n    USER_ID,\n    TEMPLATE_ID,\n    NAME_LENGTH,\n    MINIMUM_MESSAGE_LENGTH,\n    MAX_MESSAGE_LENGTH,\n    SERVICE_ID\n} from '../../../constants';\nimport LangContext from '../../../context/LangContext';\nimport * as emailjs from 'emailjs-com'\nimport Swal from 'sweetalert2';\n\n// eslint-disable-next-line\nconst EMAIL_VALIDATION = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\nconst checkEmail = value => EMAIL_VALIDATION.test(value);\nconst checkName = value => value && value.length >= NAME_LENGTH;\nconst checkMessage = value => value && value.length > MINIMUM_MESSAGE_LENGTH && value.length < MAX_MESSAGE_LENGTH;\n\n\nconst Contacts = () => {\n    const {contacts} = useContext(LangContext).currentLangData;\n    const initForm = {message: '', name: '', email: ''};\n    const [form, handleForm] = useState(initForm);\n    const [clickedButton, handleClick] = useState(false);\n    const passValid = checkMessage(form.message) && checkEmail(form.email) && checkName(form.name) && true;\n\n\n    const fireAlert = status => {\n\n        Swal.fire({\n            icon: status === 200 ? 'success' : 'error',\n            heightAuto: false,\n            title: contacts.messageHeader,\n            text: status === 200 ? contacts.messageSuccessContent : contacts.messageFailContent,\n            customClass: {\n                confirmButton: 'ui green basic button',\n                container: 'alert-container-class',\n            },\n            popup: 'swal2-show',\n\n        });\n\n        setTimeout(() => Swal.close(), 2500)\n\n    };\n\n    const handleSubmit = (form, passValid) => passValid && sendFeedback({\n        message_html: form.message,\n        from_name: form.name,\n        reply_to: form.email\n    });\n\n    const sendFeedback = values => {\n        const templateId = TEMPLATE_ID;\n        const user_id = USER_ID;\n        emailjs.send(\n            SERVICE_ID,\n            templateId,\n            values,\n            user_id)\n            .then(res => {\n                fireAlert(res.status);\n                handleClick(false);\n                handleForm(initForm)\n            })\n            .catch(err => {\n                fireAlert(err.status);\n                handleClick(false);\n                handleForm(initForm)\n            });\n    };\n\n    return (\n        <div\n            id=\"contacts\">\n            <Grid>\n                <Grid.Column\n                    computer={8}\n                    mobile={16}\n                    stretched\n                    className='contacts-image-column'\n                >\n                    <Image\n                        className='image-contacts'\n                        src={CONTACTS_LINK}\n                    />\n                </Grid.Column>\n                <Grid.Column\n                    className='contacts-form-column'\n                    computer={8}\n                    mobile={16}\n                >\n                    <Header\n                        textAlign='center'\n                        className='header-contacts'\n                        as='h2'>\n                        {contacts.header}\n                    </Header>\n                    <Form\n                        className='form-contacts'\n                    >\n                        <Form.Field\n                            required\n                            className='form-field-name'\n                        >\n                            <Form.Input\n                                required\n                                error={clickedButton && !checkName(form.name) && {\n                                    content: contacts.nameError\n                                }}\n                                control={Input}\n                                label={contacts.userName}\n                                onChange={(e, data) => {\n                                    handleForm({\n                                        ...form,\n                                        name: data.value\n                                    })\n                                }}\n                                value={form.name}\n                                placeholder={contacts.userName}\n                            />\n                        </Form.Field>\n\n                        <Form.Field\n                            required\n                            className='form-field-email'\n                        >\n                            <Form.Input\n                                required\n                                control={Input}\n                                error={clickedButton && !checkEmail(form.email) && {\n                                    content: contacts.emailError,\n                                }}\n                                label={contacts.userEmail}\n                                onChange={(e, data) => {\n                                    handleForm({\n                                        ...form,\n                                        email: data.value\n                                    })\n                                }}\n                                placeholder={contacts.userEmail}\n                                value={form.email}\n\n                            />\n                        </Form.Field>\n                        <div className='contacts-message-length'>{MAX_MESSAGE_LENGTH - form.message.length}</div>\n                        <Form.TextArea\n                            required\n                            error={clickedButton && !checkMessage(form.message) && {\n                                content: contacts.textError,\n                            }}\n                            onChange={(e, data) => handleForm({...form, message: data.value})}\n                            value={form.message}\n                            label={contacts.message}\n                            placeholder={contacts.message}>\n\n                        </Form.TextArea>\n\n                        <Form.Button\n                            onClick={(e, data) => {\n                                handleClick(true);\n                                handleSubmit(form, passValid)\n                            }}\n                            className='contacts-button'\n                            type='submit'>\n                            {contacts.send}\n                        </Form.Button>\n                    </Form>\n\n                </Grid.Column>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Contacts;\n","import Contacts from './Contacts.js';\n\nexport default Contacts;\n","import About from './About.js';\n\nexport default About;\n","import React, { useContext } from \"react\";\nimport { Grid, Container, Header, List } from \"semantic-ui-react\";\nimport { ABOUT_PUBLIC_ID, CLOUD_NAME } from \"../../../constants/\";\nimport { Image as CloudImage } from \"cloudinary-react\";\nimport \"./style.scss\";\nimport LangContext from \"../../../context/LangContext\";\n\nconst About = () => {\n  const { about } = useContext(LangContext).currentLangData;\n  return (\n    <Grid id=\"about\" className=\"grid-about\" divided=\"vertically\">\n      <Grid.Column computer={8} mobile={16} className=\"first-column-about\">\n        <Container fluid className=\"about-desc\">\n          <Header className=\"header-about-desc\" as=\"h2\">\n            {about.header}\n          </Header>\n          <p className=\"paragraph-about-desc\">\n            <b>KoRuJa </b>\n            {about.desc}\n          </p>\n\n          <p className=\"paragraph-about-desc\">{about.current}</p>\n\n          <p className=\"paragraph-about-desc\">{about.spec}</p>\n\n          <List className=\"list-content-about\">\n            {about.list.map((desc, key) => {\n              return (\n                <List.Item key={key}>\n                  <List.Icon\n                    size={window.innerWidth < 768 ? \"small\" : \"small\"}\n                    corent=\"bottom left\"\n                    className=\"about-icon\"\n                    name=\"checkmark\"\n                  />\n                  <List.Content>{desc}</List.Content>\n                </List.Item>\n              );\n            })}\n          </List>\n        </Container>\n      </Grid.Column>\n      <Grid.Column\n        computer={8}\n        mobile={16}\n        stretched\n        className=\"second-column-about\"\n      >\n        <CloudImage\n          alt={\"\"}\n          className=\"about-image\"\n          cloudName={CLOUD_NAME}\n          publicId={ABOUT_PUBLIC_ID}\n        />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default About;\n","import React, { useContext } from \"react\";\nimport { Grid, Tab, Reveal, Header, Transition, Card } from \"semantic-ui-react\";\nimport {\n  PRODUCTS_TABS,\n  PRODUCTS,\n  CLOUD_NAME,\n  PRODUCTS_TOXINS,\n  PRODUCTS_MESO,\n  PRODUCTS_FILLERS\n} from \"../../../../constants/\";\nimport LangContext from \"../../../../context/LangContext\";\nimport { Image as CloudImage } from \"cloudinary-react\";\n\nconst fetchImages = value => {\n  return (\n    <Grid>\n      <Grid.Row>\n        {PRODUCTS_TABS.cosmetics[value].map((name, key) => {\n          return (\n            <Transition\n              key={key}\n              visible={true}\n              directional\n              animation=\"zoom\"\n              transitionOnMount={true}\n              // onStart={(e, data) => console.log(data)}\n              duration={1500}\n            >\n              <Grid.Column\n                className=\"products-column\"\n                verticalAlign=\"middle\"\n                key={key}\n                largeScreen={8}\n                tablet={8}\n                computer={8}\n                widescreen={5}\n                mobile={16}\n              >\n                {window.innerWidth > 767 ? (\n                  <Reveal className=\"products-reveal\" animated=\"fade\">\n                    <Reveal.Content visible>\n                      <Grid.Column className=\"products-column-image\" key={key}>\n                        <CloudImage\n                          alt={\"\"}\n                          cloudName={CLOUD_NAME}\n                          className=\"products-images\"\n                          publicId={`${PRODUCTS}/${value}/${name}`}\n                        />\n                      </Grid.Column>\n                    </Reveal.Content>\n                    <Reveal.Content className=\"product-name\" hidden>\n                      <Header as={\"h3\"}>{name.split(\"_\").join(\" \")}</Header>\n                    </Reveal.Content>\n                    <Reveal />\n                  </Reveal>\n                ) : (\n                  <Card className=\"products-cosmetology-card\" key={key}>\n                    <CloudImage\n                      alt={\"\"}\n                      cloudƒName={CLOUD_NAME}\n                      className=\"products-images\"\n                      publicId={`${PRODUCTS}/${value}/${name}`}\n                    />\n                    <Card.Header textAlign=\"center\">\n                      {name.split(\"_\").join(\" \")}\n                    </Card.Header>\n                  </Card>\n                )}\n                <div></div>\n              </Grid.Column>\n            </Transition>\n          );\n        })}\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nconst createPanes = products => {\n  return [\n    {\n      menuItem: products.subTabNames.toxins,\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Transition\n            visible={true}\n            animation=\"fade\"\n            transitionOnMount={true}\n            duration={1500}\n          >\n            {fetchImages(PRODUCTS_TOXINS)}\n          </Transition>\n        </Tab.Pane>\n      )\n    },\n    {\n      menuItem: products.subTabNames.fillers,\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Transition\n            visible={true}\n            animation=\"fade\"\n            transitionOnMount={true}\n            duration={1500}\n          >\n            {fetchImages(PRODUCTS_FILLERS)}\n          </Transition>\n        </Tab.Pane>\n      )\n    },\n    {\n      menuItem: products.subTabNames.meso,\n      render: () => (\n        <Tab.Pane attached={false}>{fetchImages(PRODUCTS_MESO)}</Tab.Pane>\n      )\n    }\n  ];\n};\n\nconst Cosmetology = () => {\n  const { products } = useContext(LangContext).currentLangData;\n  const innerWidth = window.innerWidth > 625;\n  return (\n    <div>\n      <Tab\n        className=\"cosmetics-left-tab\"\n        menu={{\n          fluid: innerWidth,\n          vertical: innerWidth,\n          tabular: innerWidth,\n          pointing: !innerWidth,\n          secondary: !innerWidth\n        }}\n        panes={createPanes(products)}\n      />\n    </div>\n  );\n};\n\nexport default Cosmetology;\n","import React, {useState} from 'react';\nimport {Grid, Modal, Button, Container, Transition} from \"semantic-ui-react\";\nimport {PRODUCTS_TABS, PRODUCTS, CLOUD_NAME} from \"../../../../constants/\";\nimport {Image as CloudImage} from \"cloudinary-react\";\n\nconst findNumberInString = value => parseInt(value.replace(/^\\D+/g, ''))\n\nconst LiftingThread = () => {\n    const [expanded, setExpand] = useState(false);\n    const [moused, setMoused] = useState(false);\n    const [imageKey, setImageKey] = useState(0);\n    const [hoveredColumn, setHoveredColumn] = useState(0);\n\n    const fetchImages = (value) => {\n        return (\n            <Grid className={'products-lifting-grid'}>\n                <Grid.Row\n                >\n                    {PRODUCTS_TABS.lifting.desc.map((name, key) => {\n                        return <Transition\n                            key={key}\n                            visible={true}\n                            animation='fade'\n                            transitionOnMount={true}\n                            unmountOnHide={true}\n                            duration={1500}>\n                            <Grid.Column\n                                className={`products-lifting-column ${key}`}\n                                style={{top: key === 0 && window.innerWidth > 768 && '0px'}}\n                                verticalAlign='top'\n                                key={key}\n                                largeScreen={5}\n                                tablet={7}\n                                computer={5}\n                                widescreen={3}\n                                mobile={16}\n                                onMouseEnter={(props) => {\n                                    setHoveredColumn(findNumberInString(props.currentTarget.className));\n                                    setMoused(true)\n                                }}\n                                onMouseLeave={() => setMoused(false)}\n                            >\n                                <Button\n                                    className='products-lifting-button-expand'\n                                    icon={'expand'}\n                                    onClick={() => {\n                                        setExpand(true);\n                                        setImageKey(key)\n                                    }}\n                                    style={{\n                                        visibility: key === hoveredColumn && moused ? 'visible' : 'hidden'\n                                    }}\n                                />\n\n                                <CloudImage\n                                    alt={\"\"}\n                                    cloudName={CLOUD_NAME}\n                                    className='products-lifting-image'\n                                    publicId={`${PRODUCTS}/${value}/${name}`}\n                                />\n\n                            </Grid.Column>\n                        </Transition>\n                    })}\n                </Grid.Row>\n            </Grid>\n        )\n    };\n\n    const setModalImage = (value, imageKey) => {\n        return PRODUCTS_TABS.lifting.desc.map((name, key) => {\n            return imageKey === key && <CloudImage\n                key={key}\n                alt={\"\"}\n                cloudName={CLOUD_NAME}\n                className='products-lifting-modal-image'\n                publicId={`${PRODUCTS}/${value}/${name}`}\n            />\n\n        })\n    };\n\n    return (\n        <div className='products-lifting-thread'>\n            <Container fluid>\n                {fetchImages('lifting')}\n            </Container>\n            <Modal\n                className='products-lifting-modal'\n                closeIcon={<Button\n                    className='products-lifting-modal-button-close'\n                    icon='close'\n                    size='huge'\n                />\n                }\n                onClose={() => setExpand(false)}\n                open={expanded}>\n                <Modal.Content\n                    className='products-lifting-modal-content'\n                >\n                    {setModalImage('lifting', imageKey)}\n                </Modal.Content>\n            </Modal>\n        </div>\n    );\n};\n\n\nexport default LiftingThread;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Grid,\n  Container,\n  Transition,\n  Item,\n  Header,\n  Step,\n  Icon,\n  Segment\n} from \"semantic-ui-react\";\nimport {\n  PRODUCTS,\n  CLOUD_NAME,\n  PRODUCTS_COSMETICS_STEPS\n} from \"../../../../constants/\";\nimport { Image as CloudImage } from \"cloudinary-react\";\nimport LangContext from \"../../../../context/LangContext\";\n\nconst CustomizedStep = ({ products }) => {\n  const [currentStep, selectStep] = useState(\"choice\");\n  const [curentKey, setKey] = useState(0);\n  return (\n    <Transition\n      visible={true}\n      animation=\"fade\"\n      transitionOnMount={true}\n      duration={1500}\n    >\n      <Container className=\"products-cosmetics-steps\" fluid>\n        <Step.Group widths={3} attached=\"top\" fluid stackable=\"tablet\">\n          {PRODUCTS_COSMETICS_STEPS.map((step, key) => {\n            return (\n              <Step\n                active={key === curentKey}\n                onClick={() => {\n                  setKey(key);\n                  selectStep(step.name);\n                }}\n                key={key}\n              >\n                <Icon color={step.color} name={step.icon} />\n                <Step.Content>\n                  <Step.Title>{products[step.name].header}</Step.Title>\n                </Step.Content>\n              </Step>\n            );\n          })}\n        </Step.Group>\n        <Segment attached>\n          <Item.Group>\n            <Item className={'products-cosmetics-item'}>\n              <CloudImage\n                alt={\"\"}\n                cloudName={CLOUD_NAME}\n                className=\"products-cosmetics-images\"\n                publicId={`${PRODUCTS}/others/${PRODUCTS_COSMETICS_STEPS[curentKey].image}`}\n              />\n              <Item.Content className={\"products-cosmetics-content\"}>\n                {products[currentStep].desc.map((item, key) => {\n                  return (\n                    <Item.Description\n                      className={\"products-cosmetics-item\"}\n                      key={key}\n                    >\n                      {item}\n                    </Item.Description>\n                  );\n                })}\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Container>\n    </Transition>\n  );\n};\nconst Cosmetics = () => {\n  const { products } = useContext(LangContext).currentLangData;\n  // console.log(products, 'products')\n\n  return (\n    <div className=\"products-cosmetics-container\">\n      <Grid>\n        <Grid.Row>\n          <Header className=\"products-cosmetics-header\" as=\"h3\">\n            {\" \"}\n            {products.services.header}\n          </Header>\n        </Grid.Row>\n        <Grid.Row>\n          <CustomizedStep products={products.services.steps} />\n        </Grid.Row>\n      </Grid>\n      {/* {console.log(products.services)} */}\n    </div>\n  );\n};\n\nexport default Cosmetics;\n","import React, { useContext } from \"react\";\nimport { Header, Tab } from \"semantic-ui-react\";\nimport { Cosmetology, LiftingThread, Cosmetics } from \"./Components/\";\nimport LangContext from \"../../../context/LangContext\";\nimport \"./style.scss\";\n\nconst createPanes = products => {\n  return [\n    {\n      menuItem: products.tabNames.lifting,\n      render: () => (\n        <Tab.Pane attached={false}>\n          <LiftingThread />\n        </Tab.Pane>\n      )\n    },\n    {\n      menuItem: products.tabNames.cosmetology,\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Cosmetology context={products} />\n        </Tab.Pane>\n      )\n    },\n    {\n      menuItem: products.tabNames.cosmetics,\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Cosmetics />\n        </Tab.Pane>\n      )\n    }\n    // {\n    //     menuItem: products.tabNames.other,\n    //     render: () => <Tab.Pane attached={false}>Tab 4 Content</Tab.Pane>,\n    // },\n  ];\n};\n\nconst Products = () => {\n  const { products } = useContext(LangContext).currentLangData;\n  return (\n    <div id=\"products\">\n      <Header textAlign=\"center\" className=\"header-products\" as=\"h2\">\n        {products.header}\n      </Header>\n      <div className=\"products-tab\">\n        <Tab menu={{ secondary: true }} panes={createPanes(products)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n","import Products from './Products';\n\nexport default Products;\n","import routes from './routes';\n\n\nexport default routes;\n","import Header from \"../view/Components/Header\";\nimport About from \"../view/Components/About\";\nimport Products from \"../view/Components/Products\";\nimport Contacts from \"../view/Components/Contacts\";\n\nconst routes = [\n    {\n        name: [\"ГЛАВНАЯ\", \"HOME\"],\n        path: \"/korujaproject/#home\",\n        icon: \"home\",\n        component: Header\n    },\n    {\n        name: [\"О НАС\", \"ABOUT US\"],\n        path: \"/korujaproject/#about\",\n        icon: \"bolt\",\n        component: About\n    },\n    {\n        name: [\"ПРОДУКЦИЯ\", \"PRODUCTS\"],\n        path: \"/korujaproject/#products\",\n        icon: \"info\",\n        component: Products\n    },\n    {\n        name: [\"КОНТАКТЫ\", \"CONTACTS\"],\n        path: \"/korujaproject/#contacts\",\n        icon: \"phone\",\n        component: Contacts\n    },\n];\n\nexport default routes;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, {useContext, useState} from 'react';\nimport logo from \"../../../assets/image2.svg\";\nimport './style.scss';\nimport {\n    Grid,\n    Image,\n    Container,\n    Menu,\n    Header,\n    Item,\n    Icon\n} from 'semantic-ui-react';\nimport LangContext from '../../../context/LangContext';\nimport {\n    GB_FLAG_LINK,\n    RU_FLAG_LINK,\n    CLOUD_NAME,\n    PUBLIC_ID_INSTAGRAM_ICON,\n    EMAIL_NAME,\n    NETWORKS_NUMBER,\n    ADDITIONAL_NUMBER,\n    LOGO_NAME\n} from '../../../constants';\nimport {Image as CloudImage} from 'cloudinary-react';\nimport routes from '../../../routes';\n\n\nconst Footer = () => {\n    const {footer, app} = useContext(LangContext).currentLangData;\n    const {switchLang} = useContext(LangContext);\n    const navIndex = app.language === 'ru' ? 0 : 1;\n    const currentYear = new Date().getFullYear()\n    const [flag, switchFlag] = useState(true);\n    const currentFlag = flag ? GB_FLAG_LINK : RU_FLAG_LINK;\n    const currentLanguage = flag ? 'en-US' : 'ru-RU';\n\n    return (\n        <div id=\"footer\">\n            <Grid>\n                <Grid.Column\n                    computer={5}\n                    widescreen={5}\n                    mobile={3}\n                    className='footer-column-logo'\n                >\n                    <Container\n\n                        className=\"footer-container-logo\"\n                    >\n                        <Image src={logo}/>\n                        <span className=\"footer-logo-name logo-name\">{LOGO_NAME}</span>\n                    </Container>\n                    <Container\n                        className=\"footer-container-desc\"\n                    >   2004-{currentYear} <br/>\n                        {footer.company}\n                        <br/>\n                        <CloudImage\n                            cloudName={CLOUD_NAME}\n                            className=\"icon-instagram-default icon-footer-instagram\"\n                            publicId={PUBLIC_ID_INSTAGRAM_ICON}\n                        />\n                    </Container>\n                </Grid.Column>\n                <Grid.Column\n                    computer={5}\n                    widescreen={5}\n                    className=\"footer-menu-column\">\n                    <Menu\n                        text\n                        vertical\n                        className=\"footer-menu\"\n                    >\n                        <Menu.Menu>\n                            {routes.map((item, key) => {\n                                return <Menu.Item\n                                    key={key}\n                                    as='a'\n                                    href={item.path}\n                                    className=\"footer-menu-items nav-bar-menu-items\"\n                                >\n                                    {item.name[navIndex]}\n                                </Menu.Item>\n\n                            })}\n                            <Menu.Item>\n                                <Item.Image\n                                    as='button'\n                                    className='nav-bar-language'\n                                    src={currentFlag}\n                                    onClick={() => {\n                                        switchFlag(!flag);\n                                        switchLang(currentLanguage)\n                                    }}\n                                />\n                            </Menu.Item>\n                        </Menu.Menu>\n                    </Menu>\n                </Grid.Column>\n                <Grid.Column\n                    tablet={6}\n                    widescreen={5}\n                    largescreen={6}\n                    computer={5}\n                    mobile={16}\n                >\n                    <Header\n                        textAlign='center'\n                        className='footer-contacts-header'\n                        as='h4'>\n                        {footer.info}\n                    </Header>\n                    <Container className='footer-contacts-info'>\n                        <div className='footer-mobile-phones'>\n                            <Icon\n                                color={'brown'}\n                                name=\"phone\"/>\n                            <p>\n                                {NETWORKS_NUMBER}<br/>\n                                {ADDITIONAL_NUMBER}\n                            </p>\n                        </div>\n                        <p className='footer-network-info'>\n                            <b> <Icon\n                                color={'grey'}\n                                name=\"mail\"/>\n                            </b> {EMAIL_NAME} <br/>\n                            <b> <Icon\n                                size={\"large\"}\n                                color={'blue'}\n                                name=\"telegram\"/>\n                                <Icon\n                                    size={\"large\"}\n                                    color={'violet'}\n                                    name=\"viber\"/> </b>\n                            {NETWORKS_NUMBER}\n                        </p>\n                        <p>\n                            <b>{footer.office}</b> 1F, Sinwol-Ro 24,<br/>\n                            Uichangu,Changwon City Korea , 51443\n                        </p>\n\n                    </Container>\n                </Grid.Column>\n            </Grid>\n        </div>\n    );\n\n};\n\nexport default Footer;\n","import ScrollButton from './ScrollButton';\n\nexport default ScrollButton;\n","import React, {useRef, useEffect} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport './style.scss';\n\n\nconst Header = () => {\n    const scrollRef = useRef(null);\n\n    useEffect(() => {\n        window.addEventListener('scroll', () => scrollFunction(), true);\n    });\n\n    const scrollFunction = () => {\n        if (scrollRef.current) {\n            scrollRef.current.children[0].style.visibility =\n                scrollRef.current.closest(\"body\").scrollTop < (window.innerHeight / 2) || window.innerWidth < 768 ? \"hidden\" : \"visible\"\n        }\n    };\n\n    const scrollToTop = () => scrollRef.current.closest(\"body\").scrollTop = scrollRef.current && 0;\n    return (\n        <div\n            id=\"scroll\"\n            ref={scrollRef}\n\n        >\n            <Button\n                icon='arrow up'\n                size={'medium'}\n                onClick={() => scrollToTop()}\n                className=\"scroll-button\"\n            />\n        </div>\n    )\n};\nexport default Header;\n","import React, {useContext, useState} from 'react';\nimport './style.css';\nimport { Image, List} from \"semantic-ui-react\";\nimport { GB_FLAG_LINK, RU_FLAG_LINK} from '../../../constants';\nimport LangContext from '../../../context/LangContext';\nimport routes from '../../../routes';\n\nconst MobileMenu = () => {\n    const [menu, toggleMenu] = useState(false);\n    const [flag, switchFlag] = useState(true);\n    const {switchLang} = useContext(LangContext);\n    const currentFlag = flag ? GB_FLAG_LINK : RU_FLAG_LINK;\n    const currentLanguage = flag ? 'en-US' : 'ru-RU';\n\n\n    const hamburgerClass = menu ? 'open' : '';\n    const menuClass = menu ? 'mobile-open-menu' : 'mobile-close-menu';\n    return (<div className='mobile-nav-bar mobile-view'>\n            <div className=\"menu-icon-wrapper float-left\" onClick={() => toggleMenu(!menu)}>\n                <div id=\"hamburger\" className={hamburgerClass}>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n            </div>\n\n            <div className={menuClass}>\n                {routes.map((item, key) => {\n                    return <List.Item\n                        name={'error'}\n                        key={key}\n                        as='a'\n                        href={item.path}\n                        className='mobile-sidebar-menu'\n                    >\n                        <List.Icon name={item.icon}/>\n                        <List.Content>{item.name[flag ? 0 : 1]}</List.Content>\n                    </List.Item>\n\n                })}\n\n                <List.Item>\n                    <Image\n                        className='mobile-nav-bar-language'\n                        src={currentFlag}\n                        onClick={() => {\n                            switchFlag(!flag);\n                            switchLang(currentLanguage)\n                        }}\n                    />\n                </List.Item>\n            </div>\n        </div>\n    )\n}\n\nexport default MobileMenu;\n","import NavBar from './NavBar.js';\n\nexport default NavBar\n","import React, {useContext, useState} from 'react';\nimport './style.css';\nimport logo from '../../../assets/image2.svg';\nimport {\n    Menu,\n    Container,\n    Image,\n    Sticky,\n    Item\n} from \"semantic-ui-react\";\nimport {\n    GB_FLAG_LINK,\n    RU_FLAG_LINK\n} from '../../../constants';\nimport LangContext from '../../../context/LangContext';\nimport MobileMenu from './MobileNavBar';\nimport routes from \"../../../routes\";\n\nconst NavBar = () => {\n    const [flag, switchFlag] = useState(true);\n    const {switchLang} = useContext(LangContext);\n    //\n    const currentFlag = flag ? GB_FLAG_LINK : RU_FLAG_LINK;\n    const currentLanguage = flag ? 'en-US' : 'ru-RU';\n\n    return (\n        <div>\n            <Sticky className='nav-bar-sticky'>\n                <Container\n                    className='mobile-nav-bar-container'\n                    fluid>\n                    <Menu\n                        className=\"nav-bar-menu\"\n                        borderless>\n                        <MobileMenu/>\n                        <Menu.Menu\n                        className='logo-menu-item'\n                        >\n                            <Menu.Item\n                                as={'a'}\n                                href=\"/koruja/#home\"\n                                className=\"logo-container\"\n                            >\n                                <Image src={logo}/>\n                                <span className=\"logo-name\">KRJ</span>\n                            </Menu.Item>\n                        </Menu.Menu>\n                        <Menu.Menu position={\"right\"}>\n                            {routes.map((item, key) => {\n                                return <Menu.Item\n                                    key={key}\n                                    as='a'\n                                    href={item.path}\n                                    className=\"nav-bar-menu-items\"\n                                >\n                                    {item.name[flag ? 0 : 1]}\n                                </Menu.Item>\n\n                            })}\n                            <Menu.Item>\n                                <Item.Image\n                                    as='button'\n                                    className='nav-bar-language'\n                                    src={currentFlag}\n                                    onClick={() => {\n                                        switchFlag(!flag);\n                                        switchLang(currentLanguage)\n                                    }}\n                                />\n                            </Menu.Item>\n                        </Menu.Menu>\n                    </Menu>\n                </Container>\n            </Sticky>\n\n        </div>\n    );\n};\n\nexport default NavBar;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Header, Contacts, Footer, About, Products, ScrollButton, NavBar} from './view/Components';\nimport {createBrowserHistory} from 'history';\nimport {Switch, Route, Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {LangProvider} from './context/LangContext';\nimport routes from './routes';\n\n// styles\nimport './style/index.scss';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'sweetalert2/src/sweetalert2.scss';\n\n\nconst hist = createBrowserHistory();\nconst routing = (\n    <LangProvider>\n        <div>\n            <Router history={hist}>\n                <div>\n                    <NavBar/>\n                    <Switch>\n                        {routes.map((item, key) =>\n                            <Route\n                                key={key}\n                                path={item.path}\n                                component={item.component}/>\n                        )}\n                    </Switch>\n                </div>\n            </Router>\n            <ScrollButton/>\n            <Header/>\n            <About/>\n            <Products/>\n            <Contacts/>\n            <Footer/>\n        </div>\n    </LangProvider>\n)\n\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}